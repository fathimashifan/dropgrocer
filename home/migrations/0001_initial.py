# Generated by Django 4.0.5 on 2022-06-28 07:19

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('geolocation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Seller', 'Seller'), ('Driver', 'Driver'), ('Customer', 'Customer')], default='Customer', max_length=10)),
                ('mobile', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Male', max_length=6)),
                ('dob', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, default='default/logo.png', null=True, upload_to='user/')),
                ('about', models.TextField(blank=True)),
                ('store', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook', models.BooleanField(default=False)),
                ('twitter', models.BooleanField(default=False)),
                ('instagram', models.BooleanField(default=False)),
                ('socialid', models.TextField(blank=True, null=True)),
                ('online', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('multilogin', models.BooleanField(default=False)),
                ('multilanguage', models.CharField(choices=[('ar', 'Arabic'), ('en', 'English')], default='en', max_length=10)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitute', models.FloatField(blank=True, null=True)),
                ('source', models.CharField(choices=[('Website', 'Website'), ('Android', 'Android'), ('iOS', 'iOS'), ('AMP', 'AMP'), ('PWA', 'PWA'), ('Desktop', 'Desktop')], default='Website', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True)),
                ('utrack', models.TextField(blank=True)),
                ('socialtype', models.CharField(choices=[('Facebook', 'Facebook'), ('Gmail', 'Gmail'), ('Apple', 'Apple')], default='Facebook', max_length=10)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='geolocation.country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='parent')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('city', models.CharField(max_length=50, verbose_name='city')),
                ('address', models.TextField(verbose_name='address')),
                ('postcode', models.CharField(max_length=6, verbose_name='postcode')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitute', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='geolocation.country', verbose_name='Country')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='geolocation.state', verbose_name='State')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Address',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='content')),
                ('image', models.ImageField(help_text='920 x 450 pixels', upload_to='banner/', verbose_name='image')),
                ('web', models.BooleanField(default=False, verbose_name='web')),
                ('mobile', models.BooleanField(default=False, verbose_name='mobile')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Banner',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160, verbose_name='title')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=160, populate_from='title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='content')),
                ('image', models.ImageField(upload_to='category/', verbose_name='image')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subcategory', to='home.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='DeliveryCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Delivery Charge',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('code', models.CharField(max_length=100, verbose_name='code')),
                ('amount', models.FloatField(help_text='value in percentage', verbose_name='amount')),
                ('valid', models.DateField(verbose_name='valid')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Discount',
            },
        ),
        migrations.CreateModel(
            name='DocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Document Types',
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160, verbose_name='title')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=160, populate_from='title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='content')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Faq',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=160, populate_from='title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('estd', models.DateField()),
                ('logo', models.ImageField(help_text='logo size 200 x 200', upload_to='manufacturer/')),
                ('email', models.EmailField(max_length=100)),
                ('mobile', models.CharField(max_length=12)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('total', models.FloatField(default=0, verbose_name='total')),
                ('date', models.DateTimeField(blank=True, help_text='Select your time slot', null=True, verbose_name='date')),
                ('confirm', models.BooleanField(default=False)),
                ('adult', models.BooleanField(default=False)),
                ('driverconfirm', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, verbose_name='note')),
                ('paymode', models.CharField(choices=[('PENDING', 'PENDING'), ('PAYPAL', 'PAYPAL'), ('COD', 'COD')], default='PENDING', max_length=15)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitute', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('CONFIRM', 'CONFIRM'), ('REJECT', 'REJECT'), ('IN TRANSIT', 'IN TRANSIT'), ('DELIVERED', 'DELIVERED')], default='PENDING', max_length=10)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ordera', to='home.address', verbose_name='address')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orderd', to='home.discount')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='driver', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='seller', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Order',
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160, verbose_name='title')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=160, populate_from='title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='content')),
                ('keyword', models.CharField(max_length=160)),
                ('meta_title', models.CharField(max_length=160)),
                ('meta_description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True)),
                ('utrack', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Page',
            },
        ),
        migrations.CreateModel(
            name='Popup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('image', models.ImageField(help_text='500 x300 pixels', upload_to='popup/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True)),
                ('utrack', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160, verbose_name='title')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=260, populate_from='title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='content')),
                ('short_description', models.TextField()),
                ('image', models.ImageField(upload_to='product/', verbose_name='image')),
                ('fsale', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=10, verbose_name='Flash Sale')),
                ('gross_price', models.FloatField(default=0)),
                ('price', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0, help_text='Discount must be less then product price')),
                ('min_limit', models.PositiveIntegerField(default=1, verbose_name='Minimum Order Limit')),
                ('max_limit', models.PositiveIntegerField(blank=True, default=10, verbose_name='Maximum Order Limit')),
                ('weight', models.FloatField(default=0)),
                ('weight_type', models.CharField(choices=[('kg', 'kg'), ('gm', 'gm'), ('ltr', 'ltr'), ('ml', 'ml')], default='gm', max_length=10)),
                ('seasonal', models.BooleanField(default=False)),
                ('adult', models.BooleanField(default=False)),
                ('view', models.PositiveIntegerField(default=0, verbose_name='view')),
                ('like', models.PositiveIntegerField(default=0, verbose_name='like')),
                ('unlike', models.PositiveIntegerField(default=0, verbose_name='unlike')),
                ('impression', models.PositiveIntegerField(default=0, verbose_name='impression')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(to='home.category', verbose_name='category')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.manufacturer')),
            ],
            options={
                'verbose_name_plural': 'Product',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=50)),
                ('url', models.URLField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True)),
                ('utrack', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Subscribe',
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('code', models.PositiveIntegerField(default=0)),
                ('percentage', models.FloatField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Taxes',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=25, verbose_name='number')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Vehicle',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Vehicle Types',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='quantity')),
                ('price', models.FloatField(default=0, verbose_name='price')),
                ('total', models.FloatField(default=0.0, verbose_name='total')),
                ('cart', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wproduct', to='home.product', verbose_name='product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name_plural': 'Wishlist',
            },
        ),
        migrations.CreateModel(
            name='VehicleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='vehicle/document/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.vehicle')),
            ],
            options={
                'verbose_name_plural': 'Vehicle Document',
            },
        ),
        migrations.CreateModel(
            name='VehicleDocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=160)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('vtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.vehicletype', verbose_name='Vehicle Type')),
            ],
            options={
                'verbose_name_plural': 'Vehicle Document Type',
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vtype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.vehicletype', verbose_name='Vehicle Type'),
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='content')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supports', to='home.order', verbose_name='order')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='home.support')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='users')),
            ],
            options={
                'verbose_name_plural': 'Support',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_image/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productimage', to='home.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='tax',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.tax'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('Online', 'Online'), ('COD', 'COD')], default='Online', max_length=10, verbose_name='method')),
                ('transaction', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
                ('name', models.CharField(max_length=20)),
                ('amount', models.FloatField(verbose_name='amount')),
                ('payed', models.FloatField(verbose_name='payed')),
                ('currency', models.CharField(max_length=20)),
                ('rawdata', models.TextField(blank=True, editable=False, null=True, verbose_name='rawdata')),
                ('source', models.CharField(choices=[('Website', 'Website'), ('Android', 'Android'), ('iOS', 'iOS'), ('AMP', 'AMP'), ('PWA', 'PWA'), ('Desktop', 'Desktop')], default='Website', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.order', verbose_name='order')),
            ],
            options={
                'verbose_name_plural': 'Payment',
            },
        ),
        migrations.CreateModel(
            name='Over18',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField()),
                ('document', models.ImageField(upload_to='adult/')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='geolocation.country', verbose_name='country')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.order', verbose_name='order')),
            ],
            options={
                'verbose_name_plural': 'Over18',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='wishlist',
            field=models.ManyToManyField(to='home.wishlist', verbose_name='wishlist'),
        ),
        migrations.AddField(
            model_name='user',
            name='vtype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.vehicletype', verbose_name='vehicle type'),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dispatcher',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.order',),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('home.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.PositiveIntegerField(default=0, verbose_name='star')),
                ('review', models.TextField(blank=True, verbose_name='review')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rating', to='home.product', verbose_name='product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name_plural': 'Rating',
                'unique_together': {('product', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='document/', verbose_name='image')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('doctype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.doctype', verbose_name='Document Type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Driver')),
            ],
            options={
                'verbose_name_plural': 'Document',
                'unique_together': {('user', 'doctype')},
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('sales', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('track', models.TextField(blank=True, editable=False)),
                ('utrack', models.TextField(blank=True, editable=False)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Delete', 'Delete')], default='Active', max_length=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.product')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Availabilities',
                'unique_together': {('product', 'seller')},
            },
        ),
    ]
